
{%- if UPSTREAMS %}
{%- for upstream in UPSTREAMS.split(',') -%}
{%- set upstream_parts = upstream.split(':') %}
upstream {{loop.index}}_{{upstream_parts[1]}} {
  server {{upstream_parts[1]}}:{{upstream_parts[2]}};
}
{% endfor %}
{%- endif %}

{%- if HTTPS_REDIRECT == 'true' and ENABLE_SSL == 'true' %}
server {
  listen 0.0.0.0:80;
  return 301 https://$host$request_uri;
}
{%- endif %}

server {
  {%- if not (HTTPS_REDIRECT == 'true') %}
  listen      0.0.0.0:{{ env('NGINX_PORT', '80') }} default_server;
  {%- endif %}
  {%- if ENABLE_SSL == 'true' and NGINX_SERVER_NAME %}
  server_name {{ NGINX_SERVER_NAME }};
  listen      0.0.0.0:{{ env('NGINX_HTTPS_PORT', '443') }} ssl;
  ssl_certificate /etc/letsencrypt/live/{{ NGINX_SERVER_NAME }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ NGINX_SERVER_NAME }}/privkey.pem;
  {%- endif %}
  {%- if BASIC_AUTH_USER and BASIC_AUTH_PASS %}
  auth_basic "Please log in to proceed";
  auth_basic_user_file /etc/nginx/.htpasswd;
  {%- endif %}
  {%- if UPSTREAMS %}
  {%- for upstream in UPSTREAMS.split(',') %}
  {%- set upstream_parts = upstream.split(':') %}
  location {{ upstream_parts[0] }} {
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
    proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;
    proxy_pass http://{{loop.index}}_{{ upstream_parts[1] }};
  }
  {% endfor %}
  {%- endif %}
}
