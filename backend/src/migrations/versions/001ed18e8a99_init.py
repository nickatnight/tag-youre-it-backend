"""init

Revision ID: 001ed18e8a99
Revises: 
Create Date: 2023-02-24 02:29:14.014323

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '001ed18e8a99'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('player',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_utc', sa.DateTime(timezone=True), nullable=False),
    sa.Column('tag_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reddit_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('icon_img', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_employee', sa.Boolean(), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('has_verified_email', sa.Boolean(), nullable=False),
    sa.Column('is_suspended', sa.Boolean(), nullable=True),
    sa.Column('opted_out', sa.Boolean(), nullable=True),
    sa.Column('is_banned', sa.Boolean(), nullable=True),
    sa.Column('ref_id', sqlmodel.sql.sqltypes.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_player_id'), 'player', ['id'], unique=False)
    op.create_index(op.f('ix_player_ref_id'), 'player', ['ref_id'], unique=True)
    op.create_table('subreddit',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('sub_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_utc', sa.Integer(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description_html', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('over18', sa.Boolean(), nullable=False),
    sa.Column('subscribers', sa.Integer(), nullable=False),
    sa.Column('icon_img', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_banned', sa.Boolean(), nullable=True),
    sa.Column('ref_id', sqlmodel.sql.sqltypes.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subreddit_id'), 'subreddit', ['id'], unique=False)
    op.create_index(op.f('ix_subreddit_ref_id'), 'subreddit', ['ref_id'], unique=True)
    op.create_table('game',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('subreddit_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('ref_id', sqlmodel.sql.sqltypes.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subreddit_id'], ['subreddit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_game_id'), 'game', ['id'], unique=False)
    op.create_index(op.f('ix_game_ref_id'), 'game', ['ref_id'], unique=True)
    op.create_table('gameplayerlink',
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['game.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('game_id', 'player_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('gameplayerlink')
    op.drop_index(op.f('ix_game_ref_id'), table_name='game')
    op.drop_index(op.f('ix_game_id'), table_name='game')
    op.drop_table('game')
    op.drop_index(op.f('ix_subreddit_ref_id'), table_name='subreddit')
    op.drop_index(op.f('ix_subreddit_id'), table_name='subreddit')
    op.drop_table('subreddit')
    op.drop_index(op.f('ix_player_ref_id'), table_name='player')
    op.drop_index(op.f('ix_player_id'), table_name='player')
    op.drop_table('player')
    # ### end Alembic commands ###
